{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.url = environment.apiUrl;\n    }\n    signup(data) {\n      return this.httpClient.post(`${this.url}/user/signup`, data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n    forgotPassword(data) {\n      return this.httpClient.post(`${this.url}/user/forgot-password`, data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n    login(data) {\n      return this.httpClient.post(`${this.url}/user/login/`, data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n    checkToken() {\n      return this.httpClient.get(`${this.url}/user/checkToken`);\n    }\n    changePassword(data) {\n      return this.httpClient.post(`${this.url}/user/change-password`, data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n    getUsers() {\n      return this.httpClient.get(`${this.url}/user/get/`);\n    }\n    update(data) {\n      return this.httpClient.patch(`${this.url}/user/update/`, data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      });\n    }\n    static #_ = this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}